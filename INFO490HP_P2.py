{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "INFO490HP-P2",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Morrow98J/Fall_Portfolio_Project/blob/main/INFO490HP_P2.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "juDONlnSyFeR",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 404
        },
        "outputId": "42e308cf-0aae-4b32-d4e9-a3735c5c29ae"
      },
      "source": [
        "import requests\n",
        "import urllib.request\n",
        "import re\n",
        "import collections\n",
        "import numpy as np\n",
        "import matplotlib\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "def read_remote(url):\n",
        "  response = requests.get(url)\n",
        "  if response.status_code == requests.codes.ok:\n",
        "    return response.text\n",
        "  return None\n",
        "\n",
        "def build_google_drive_url(doc_id):\n",
        "  DRIVE1  = \"https://docs.google.com/uc\"\n",
        "  DRIVE2  = \"https://drive.google.com/uc\"\n",
        "  baseurl = DRIVE2 # DRIVE2 works as well \n",
        "  params = {\"export\" : \"download\",\n",
        "            \"id\"     : doc_id}\n",
        "  url = baseurl + \"?\" + urllib.parse.urlencode(params) \n",
        "  return url\n",
        "  \n",
        "def get_harry_potter():\n",
        "  google_id = get_book_id()\n",
        "  url  = build_google_drive_url(google_id)\n",
        "  return read_remote(url)\n",
        "  \n",
        "def get_book_id():\n",
        "  return '1jOCDUhsMY3uAoLqV3NoZogyrr-FVqEoo'\n",
        "\n",
        "def clean_hp(text):\n",
        "  regex = re.compile(r'After updates copy this file to Google Drive !')\n",
        "  regev = re.compile(r'249')\n",
        "  m = regex.search(text)\n",
        "  n = regev.search(text)\n",
        "  tx = text[m.end():n.end()]\n",
        "  regez = re.compile(r'Harry Potter and the Sorcerer\\'s Stone')\n",
        "  o = regez.search(tx)\n",
        "  return tx[o.start():n.end()]\n",
        "hp = clean_hp(get_harry_potter())\n",
        "def load_stop_words(add_pronouns = False):\n",
        "  pronouns = ['they', 'your', \"who\", \"she'd\", \"he'd\", 'madam', 'he', \"she\", 'i', 'it', \"i'm\", \"i've\", \"oh\", \"you\", \"mr\", \"mrs\", \"i'll\", \"i'd\"]\n",
        "  stop_words = list(nlp.Defaults.stop_words)\n",
        "  if add_pronouns is True:\n",
        "    stop_words += pronouns\n",
        "  return stop_words\n",
        "\n",
        "def bi_grams(tokens):\n",
        "  return [(tokens[i], tokens[i + 1]) for i in range(0, len(tokens)-1)]\n",
        "\n",
        "def top_n(tokens, n):\n",
        "  counter = collections.Counter()\n",
        "  for i in tokens:\n",
        "    counter[i] += 1\n",
        "  return counter.most_common(n)\n",
        "\n",
        "def split_text_into_tokens(text):\n",
        "  pattern = r\"['A-Za-z0-9]+-?['A-Za-z0-9]+\"\n",
        "  rd = re.findall(pattern, text)\n",
        "  fin = []\n",
        "  for i in rd:\n",
        "    if i[len(i)-1] == '\\'':\n",
        "      i = i[:len(i)-1]\n",
        "    if i[0] == '\\'':\n",
        "      i = i[1:]\n",
        "    if i[len(i)-2:] == '\\'s':\n",
        "      i = i[:len(i)-2]\n",
        "    fin.append(i)\n",
        "  return fin\n",
        "\n",
        "def find_characters_v1(text, stopwords = [], top = 15):\n",
        "  tokens = split_text_into_tokens(text)\n",
        "  cleantokens = []\n",
        "  for token in tokens:\n",
        "    if token.lower() in stopwords:\n",
        "      pass\n",
        "    else:\n",
        "      if token[0].isupper():\n",
        "        cleantokens.append(token)\n",
        "  return top_n(cleantokens, top)\n",
        "\n",
        "def find_characters_v2(text, stoplist = [], top = 15):\n",
        "  tokens = split_text_into_tokens(text)\n",
        "  cleantokens = []\n",
        "  for token in tokens:\n",
        "    if token.lower() in stoplist:\n",
        "      pass\n",
        "    else:\n",
        "      cleantokens.append(token)\n",
        "  bigrams = bi_grams(cleantokens)\n",
        "  cleanbigrams = []\n",
        "  for bigram in bigrams:\n",
        "    bigr1 = bigram[0]\n",
        "    bigr2 = bigram[1]\n",
        "    if bigr1[0].isupper() and bigr2[0].isupper():\n",
        "      cleanbigrams.append(bigr1 + ' ' + bigr2)\n",
        "  return top_n(cleanbigrams, top)\n",
        "\n",
        "def find_characters_nlp(text, top = 15):\n",
        "  names = []\n",
        "  doc = nlp(text)\n",
        "  for entity in doc.ents:\n",
        "    if entity.label_ == 'PERSON':\n",
        "      names.append(entity.text)\n",
        "  return top_n(names, top)\n",
        "\n",
        "def split_into_chapters(data):\n",
        "  split_text = re.split(\"CHAPTER [A-Z]+\\n\", data)\n",
        "  return split_text[1:]\n",
        "\n",
        "def get_character_counts_v1(chapters):\n",
        "  harry = np.array(np.char.count(split_into_chapters(hp), 'Harry'))\n",
        "  ron = np.array(np.char.count(split_into_chapters(hp), 'Ron'))\n",
        "  hagrid = np.array(np.char.count(split_into_chapters(hp), 'Hagrid'))\n",
        "  hermione = np.array(np.char.count(split_into_chapters(hp), 'Hermione'))\n",
        "  return np.array([harry, ron, hagrid, hermione])\n",
        "\n",
        "def simple_graph_v1(plots):\n",
        "\n",
        "  fig = plt.figure()\n",
        "  subplot = fig.add_subplot(1,1,1)\n",
        "\n",
        "  subplot.plot(plots[0])\n",
        "  subplot.plot(plots[1])\n",
        "  subplot.plot(plots[2])\n",
        "  subplot.plot(plots[3]) \n",
        "\n",
        "  return fig \n",
        "\n",
        "def simple_graph_v2(counts):\n",
        "  fig = plt.figure()\n",
        "  subplot = fig.add_subplot(1,1,1)\n",
        "  subplot.plot(counts)\n",
        "  return fig  # return the figure\n",
        "\n",
        "def pipeline_v1():\n",
        "\n",
        "  hp = clean_hp(get_harry_potter())\n",
        "  chapters = split_into_chapters(hp)\n",
        "\n",
        "  plots = get_character_counts_v1(chapters)\n",
        "  fig = simple_graph_v1(plots)\n",
        "  return fig\n",
        "\n",
        "chapters = split_into_chapters(hp)\n",
        "def get_character_counts_v2(chapters, names):\n",
        "\n",
        "  # use the same function as v1\n",
        "  # use a comprehension to easily get things done:\n",
        "  py_data = [np.cumsum(np.char.count(chapters,n)) for n in names ]\n",
        "  counts = np.array(py_data)\n",
        "\n",
        "  return counts.T\n",
        "\n",
        "def simple_graph_hp(counts, names):\n",
        "  fig = plt.figure()\n",
        "  subplot = fig.add_subplot(1,1,1)\n",
        "  subplot.plot(counts)\n",
        "  ar = subplot.plot(counts)\n",
        "  subplot.set_ylabel(\"Mentions\", fontsize=12)\n",
        "  subplot.set_xlabel(\"Chapters\", fontsize=12)\n",
        "  subplot.grid(True)\n",
        "  fig.suptitle(\"HP Characters JZM\", fontsize=12)\n",
        "\n",
        "  subplot.tick_params(axis='x', length=len(chapters)+1)\n",
        "  plt.xticks(np.arange(0,len(chapters)+1, 1))\n",
        "  subplot.legend(handles = ar, loc = 'upper left', labels = names)\n",
        "\n",
        "  plt.style.use('seaborn')\n",
        "  fig.tight_layout()\n",
        "\n",
        "  return fig  # return the figure\n",
        "\n",
        "def pipeline_v2(names):\n",
        "\n",
        "  hp = clean_hp(get_harry_potter())\n",
        "  chapters = split_into_chapters(hp)\n",
        " \n",
        "  np_hp = get_character_counts_v2(chapters, names)\n",
        "  fig = simple_graph_hp(np_hp, names)\n",
        "  return fig\n",
        "\n",
        "# test it\n",
        "who = [\"Harry\", \"Ron\", \"Hagrid\", \"Hermione\"]\n",
        "fig = pipeline_v2(who)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAjAAAAGDCAYAAAA1RyopAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjIsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy8li6FKAAAgAElEQVR4nOzdeXhU9b3H8fesmcxk3xMEZFG2hB1C\nEBRUJLhyq6JYXG7pYl17SxVrrUu1rbZ1F1sraL22VhSsRauAVrSiomKQfd/JOglZZzKZ9f6B5hpl\nSWImk0w+r+fJ8yRnzjnf7zmE5JMz5/x+hlAoFEJERESkGzFGugERERGRtlKAERERkW5HAUZERES6\nHQUYERER6XYUYERERKTbUYARERGRbkcBRqQLGTRoEGVlZS2WvfLKK1xzzTUAfPzxx+Tm5lJYWEhh\nYSHnnHMOP/jBDzh48OAx9/nqq68yc+ZMCgsLOeuss5g3bx7l5eXf2Hdne+ONN2hoaAhrjQsvvJBJ\nkyY1H+OTTz7ZfO6+/Bg0aBDvvfcecOT833TTTd/Yzy9+8QsGDRoU1l5FpG0UYES6mezsbJYvX87y\n5ctZuXIl48aNY968eUdd94UXXuDJJ5/kwQcfbN6mb9++zJkzh6ampk7uvKXHHnss7AFm2bJl/PSn\nP23++rrrrms+D8uXL+eaa65h+PDhTJo0qXmd7du3t+jL6/WycePGsPYpIm2nACPSzc2ZM4f169dT\nX1/fYnkwGGTBggXceeedDBgwAACLxcJNN93E/PnzMRgMzev+6le/4pxzzuG8885jx44dAFRWVjJ3\n7lwKCws588wzefbZZ5vXP/PMM3niiSeYPn06JSUl7Nmzh9mzZzNjxgymTZvG66+/3rzuf/7zH847\n7zymT5/Oj370I2pqavj5z3/O3r17ufLKK1m7di11dXXccsstTJ8+nbPOOoulS5c2bz9o0CCeeuop\npk+fTiAQ4K9//SszZsygsLCQSy65hJ07d7brvB08eJBHH32U+++/H5PJ1Lw8Pz+ft956q/nr1atX\nk5eX164aIhI+CjAi3VwgEMBoNGKxWFos37NnD7W1tZx22mnf2Obss8/GarUCsH79er7zne+wcuVK\n8vPz+ctf/gLAH//4R0466SSWL1/Oc889x4MPPkhpaWnzPsrLy1mxYgU5OTn87ne/Y+rUqbz55pv8\n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\nZWEsiZe9sSRedscbza9N4mU2lpJKpVJpaosQQgghRFrIEJIQQgghso4kMEIIIYTIOpLACCGEECLr\nSAIjhBBCiKwjCYwQQgghso4kMB/BXXfdxZVXXsmKFSvYvn37sMTct28fy5Yt4w9/+EPaY61Zs4Yr\nr7ySf/u3f+OZZ55Ja6xYLMY111zDqlWruPzyy3nhhRfSGu+weDzOsmXLeOyxx9IaZ/PmzSxcuJDV\nq1ezevVqvve976U13pNPPskll1zCpz/9aV588cW0xvrLX/4y+LpWr17NvHnz0hovEolw9dVXs3r1\nalasWMHGjRvTGs8wDL7zne+wYsUKVq9ezYEDB9IS572f7ba2NlavXs3KlSu55pprUFU1rfEAHnnk\nEWbMmEEkEhnSWMeL19bWxuc//3lWrVrF5z//ebq6utIWa+vWrXzmM59h9erVfOELX6C3t3fIYh0v\n3mEbN25kypQpQxrrePFuuukmLr744sHP4FB/5t8bT9M0rr/+ei677DI+97nPEQgE0hrvG9/4xuBr\nu/jii/nOd77zoY+3DGlrRqE33niDQ4cOsXbtWg4cOMAtt9zC2rVr0xozGo3yve99j0WLFqU1DsDr\nr79OXV0da9euxe/386lPfYpzzz03bfFeeOEFZs6cyZe+9CVaWlr4j//4D84666y0xTvswQcfJDc3\nN+1xAE455RTuvffetMfx+/088MAD/PWvfyUajXLfffdx5plnpi3e5ZdfzuWXXw70fy6efvrptMUC\n+Nvf/kZ1dTXXX389HR0dfO5zn+Mf//hH2uI999xzhEIh/vznP9PY2MgPfvADfvnLXw5pjON9tu+9\n915WrlzJBRdcwE9+8hPWrVvHypUr0xbv8ccfp6enB5/PNyQxThTvpz/9KVdccQUXXnghf/zjH3no\noYe48cYb0xLroYceYs2aNVRWVnL//ffz6KOPctVVV/3LsT4oHkAikeBXv/oVxcXFQxLnRPG++c1v\npuWYebx4jz76KPn5+fz4xz9m7dq1vPXWW3ziE59IW7yjj5s333zz4PHmg0gPzAls2rSJZcuWAVBb\nW0sgECAcDqc1ps1m49e//nVaDjDvtWDBAn72s58B4PV6icVi6LqetngXXnghX/rSl4D+b2YlJSVp\ni3XYgQMH2L9/f1pP7pmwadMmFi1aRE5ODj6fL+29PUd74IEH+OpXv5rWGPn5+fT19QEQDAbJz89P\na7yGhgZmz54NQFVVFa2trUP+WTjeZ3vz5s2DJ4WzzjqLTZs2pTXesmXLuO6661AUZcjifFi822+/\nnfPOOw849v80HbHuvfdeKisrSaVSdHR0UFpaOiSxPigewC9+8QtWrlyJzWYbslgfFi9djhfvhRde\n4JJLLgHgyiuvHLLk5YPiHVZfX08oFBr8PH4QSWBOoLu7+5gDZ0FBwZB2gR6PxWLB4XCkNcZhZrMZ\nl8sFwLp16zj99NMxm81pj7tixQpuuOEGbrnllrTHuvvuu7npppvSHuew/fv3c9VVV/GZz3yGV199\nNW1xmpubicfjXHXVVaxcuXJIT3wfZvv27ZSVlQ35N873uuiii2htbeWcc85h1apVfPvb305rvMmT\nJ/PKK6+g6zr19fU0NTXh9/uHNMbxPtuxWGzw5FdYWDikx5fjxcvJyRmy5/8o8VwuF2azGV3X+dOf\n/sTFF1+ctlgAL7/8Mueffz7d3d2DJ990xTt48CB79uzhggsuGLI4HxYP4A9/+AOf/exnue6664Z0\niOx48VpaWnj55ZdZvXo111133ZAlnx8U77BHHnmEVatWnfA5JIH5mEZr4eINGzawbt06vvvd7w5L\nvD//+c88+OCDfOtb30rre/r4448zd+5cKisr0xbjaBMmTODqq6/mwQcf5O677+bWW28d8jkNR+vr\n6+P+++/nRz/6ETfffPOw/H2uW7eOT33qU2mP88QTT1BeXs6zzz7Lww8/zH/+53+mNd4ZZ5zBrFmz\n+Pd//3cefvhhampqhv3zPlqPL7quc+ONN7Jw4cK0D42ffvrp/OMf/6CmpoZf/epXaY31wx/+kJtv\nvjmtMY526aWXcsMNN/DII48wbdo07r///rTGS6VSVFdX8/vf/55JkyYN+ZDq8aiqypYtW1i4cOEJ\n7ysJzAn4fD66u7sHf+/s7Ez7N8/htnHjRn7xi1/w61//Go/Hk9ZYO3fupK2tDYBp06ah6/qQT7Q7\n2osvvshzzz3HFVdcwV/+8hd+/vOf89prr6UtXklJCRdeeCGKolBVVUVRUREdHR1piVVYWMi8efOw\nWCxUVVXhdrvT+l4etnnz5rRP4AV4++23Wbp0KQBTp06ls7MzrcObANdddx1//vOfufPOOwkGgxQW\nFqY1HvT3UMTjcQA6OjqGbchgON18882MHz+eq6++Oq1xnn32WQAUReG8885jy5YtaYvV0dFBfX09\nN9xwA1dccQWdnZ0fqdfgX7Fo0SKmTZsGwNlnn82+ffvSGq+oqIgFCxYAsHTpUvbv35/WeABvvvnm\nCYeODpME5gSWLFnC+vXrAdi1axc+ny+tXbDDLRQKsWbNGn75y1+Sl5eX9nhvvfUWv/3tb4H+4blo\nNJrWuQ0//elP+etf/8qjjz7K5Zdfzle/+lUWL16ctnhPPvkkv/nNbwDo6uqip6cnbfN8li5dyuuv\nv45hGPj9/rS/l9B/0Ha73UM+3n8848ePZ9u2bUB/V7bb7U7r8OaePXsGv02//PLLTJ8+HZMp/YfI\nxYsXDx5jnnnmGU477bS0xxxOTz75JFarlW984xtpj3Xffffx7rvvArBt2zaqq6vTFqukpIQNGzbw\n6KOP8uijj+Lz+dK+avTrX/86TU1NQP8XiUmTJqU13umnnz64+m/Xrl1pfT8P27FjB1OnTv1I95VV\nSCcwf/58ZsyYwYoVK1AUhdtvvz3tMXfu3Mndd99NS0sLFouF9evXc99996UlwXjqqafw+/1ce+21\ng9fdfffdlJeXD3ks6J/7cuutt7Jy5Uri8Tjf/e53h+UkMVzOPvtsbrjhBp577jk0TeOOO+5I28m+\npKSE8847jyuuuAKA2267Le3vZVdXFwUFBWmNcdiVV17JLbfcwqpVq0gmk9xxxx1pjTd58mRSqRSX\nXXYZdrude+65Z8hjHO+zfc8993DTTTexdu1aysvLWb58eVrjLV68mNdee42uri6+9KUvMXfu3CFZ\nFfRB8Xp6erDb7axevRroXwwxFP+Xx4v1/e9/nzvvvBOz2YzD4WDNmjX/cpwPi5eu4/IHxVu1ahXX\nXnstTqcTl8vFD3/4w7TGu+eee/jBD37AunXrcLlc3H333WmNd99999HV1UVVVdVHeg7ZjVoIIYQQ\nWWf0fPUVQgghxJghCYwQQgghso4kMEIIIYTIOpLACCGEECLrSAIjhBBCiKwjy6iFEEMqlUrxu9/9\njr/+9a9omoau6yxdupTrr7+e3/3ud7S3t/ODH/xgSGKpqspTTz01pEuPhRDZQXpghBBD6p577uGp\np57iN7/5DevXr+fJJ59E0zS+/OUvD3mp/N27d/P4448P6XMKIbKD1IERQgyZvr4+Tj/9dP72t79R\nW1s7eH0ikeDVV19lx44dNDc3o+s677zzDkVFRdx3332UlJRQX1/PrbfeSl9fH8lkkmuuuYZPfvKT\nNDc3c8kll/DVr36Vxx9/nL6+Pu644w7mzp3L8uXLCYfDTJ8+nT/96U9s2bKFu+66a3D36h//+MdU\nVlby2GOP8fzzzxMKhZgxYwZf+9rXuPHGG6mvr0dVVRYtWsTtt9+O1WrN4LsnhPg4pAdGCDFktm3b\nRmlp6THJC4Ddbufss8/GZDKxadMmrr/+ep5//nkKCgpYt24dAGvWrOGss87i6aef5q677uLWW29F\n0zQAIpEIiqLw97//nTVr1nDbbbeRl5fHN7/5TebOncuf/vQnwuEwX/nKV/jmN7/Js88+y2c/+1mu\nueaawTa8+uqr3Hnnndx44408/vjjeL1enn76adavX4/ZbB6WfV6EEENHEhghxJDp6+s74QaIJ510\nEhUVFUD/Jo2HN7v8+c9/zhe+8IXB+yQSCbq6ugYfd9lllwH9ewclk0kOHTp0zPNu2bKFkpISlixZ\nAsAnP/lJGhsbaW1tBfp3Cp8wYQIABQUFbN26lVdeeQXDMLjzzjsHN8kTQmQHmcQrhBgy+fn5J9x9\n++jNUM1m8+AO0xs3buTBBx/E7/ejKAqpVArDMID+3YVzc3MHH+f1egkEAsc8bzAYpKmpifPPP3/w\nOpvNNrhD99GPv+CCCwgEAvzsZz+jvr6eSy65hJtvvnlYNqkUQgwNSWCEEENm7ty59PT0sGvXLmbM\nmDF4vaZp3H///YNDQu+laRrXXnstP/3pTznjjDNQVZXZs2cP3p5KpfD7/YO7bQcCgWMSEgCfz0dN\nTQ2PPfbY+55/375977tuxYoVrFixgo6ODr7+9a/z+OOPD26MKYQY+WQISQgxZLxeL1/84hf59re/\nPTjEE4vF+O53v8vu3btxOp3HfVwsFiMajTJz5kwAHn74YaxWK9FodPA+f//73wF45ZVXcDgcVFdX\nY7FYCIfDpFIp5syZQ1dXF9u2bQOgqamJb33rW8dd+fTAAw8Mzr0pKSlh3LhxKIoydG+EECLtJIER\nQgypr3/961xxxRV85Stf4bzzzuPTn/40hYWF3H///R/4mMOJz/Lly1m+fDlVVVUsW7aMq666ilgs\nhtlsRtM0LrroIm666Sa+//3vYzKZOOmkk+js7OS0007DarVy77338r3vfY8LLriAr33ta5x//vnH\nTUwuvfRSnnjiCc477zzOP/98rFYrl156aTrfFiHEEJNl1EKIEa25uZlzzz2X3bt3Z7opQogRRHpg\nhBBCCJF1JIERQgghRNaRISQhhBBCZB3pgRFCCCFE1pEERgghhBBZRxIYIYQQQmQdSWCEEEIIkXUk\ngRFCCCFE1pEERgghhBBZ5/8B0MWzDcjuTxYAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 576x396 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BfX-1x9xBraV"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}